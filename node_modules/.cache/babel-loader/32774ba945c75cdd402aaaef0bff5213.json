{"ast":null,"code":"import _slicedToArray from \"C:\\\\TTCodebase\\\\React\\\\MovieApp\\\\fetch-movies\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\TTCodebase\\\\React\\\\MovieApp\\\\fetch-movies\\\\src\\\\MovieComponent.jsx\";\n\nimport React, { Component, useState } from \"react\";\nimport './MovieComponent.css';\nimport Axios from 'axios';\n\nvar MovieComponent = function MovieComponent(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  console.log('passed json', props.moviedetails);\n\n  if (props.moviedetails != null && props.moviedetails.Response != 'False') {\n    //this.setTitle(props.moviedetails.Title);\n    //Save data to database\n    //use npm install axios to make http request to send data from client to server\n    Axios.post('http://localhost:3001/insert', {\n      title: props.moviedetails.Title,\n      genre: props.moviedetails.Genre,\n      released: props.moviedetails.Released,\n      ratings: props.moviedetails.Ratings.map(function (item, i) {\n        item.Value;\n      }),\n      poster: props.moviedetails.Poster\n    });\n    console.log(\"Made DB calls, Saved Items.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"movieComponentId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cloumn1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: props.moviedetails.Poster,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cloumn2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, props.moviedetails.Title), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, \"About the moview\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"About\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, props.moviedetails.Plot), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Genre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 42\n      }\n    }, \"Genre: \"), props.moviedetails.Genre), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Released\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }\n    }, \"Released: \"), props.moviedetails.Released), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Cast\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, \"Casts: \"), props.moviedetails.Actors), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Director\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 45\n      }\n    }, \"Directed by: \"), props.moviedetails.Director), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Writer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 43\n      }\n    }, \"Written by: \"), props.moviedetails.Director), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Language\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 45\n      }\n    }, \"In: \"), props.moviedetails.Language), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"BoxOffice\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }\n    }, \"Earnings: \"), props.moviedetails.BoxOffice), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Ratings\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 46\n      }\n    }, \"Ratings: \"), props.moviedetails.Ratings.map(function (item, i) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, item.Source, \": \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 71\n        }\n      }, item.Value));\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Movie not found\");\n  }\n};\n\nexport default MovieComponent;","map":{"version":3,"sources":["C:/TTCodebase/React/MovieApp/fetch-movies/src/MovieComponent.jsx"],"names":["React","Component","useState","Axios","MovieComponent","props","title","setTitle","console","log","moviedetails","Response","post","Title","genre","Genre","released","Released","ratings","Ratings","map","item","i","Value","poster","Poster","Plot","Actors","Director","Language","BoxOffice","toString","Source"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport './MovieComponent.css'\r\nimport Axios from 'axios'\r\n\r\nconst MovieComponent = (props) => {\r\n\r\n    const [title, setTitle] = useState();\r\n\r\n\r\n    console.log('passed json', props.moviedetails)\r\n    if (props.moviedetails != null && props.moviedetails.Response != 'False') {\r\n\r\n        //this.setTitle(props.moviedetails.Title);\r\n        //Save data to database\r\n        //use npm install axios to make http request to send data from client to server\r\n        Axios.post('http://localhost:3001/insert', {\r\n            title: props.moviedetails.Title,\r\n            genre: props.moviedetails.Genre,\r\n            released: props.moviedetails.Released,\r\n            ratings: props.moviedetails.Ratings.map((item, i) => { item.Value }\r\n            ),\r\n            poster: props.moviedetails.Poster\r\n        });\r\n        console.log(\"Made DB calls, Saved Items.\");\r\n\r\n        return (\r\n            <div id='movieComponentId'>\r\n                <div className=\"cloumn1\">\r\n                    <img className=\"image\" src={props.moviedetails.Poster} />\r\n                </div>\r\n                <div className=\"cloumn2\">\r\n                    <h2 className=\"Title\">{props.moviedetails.Title}</h2>\r\n                    <h4>About the moview</h4>\r\n                    <p className=\"About\">{props.moviedetails.Plot}</p>\r\n                    <p className=\"Genre\"><b>Genre: </b>{props.moviedetails.Genre}</p>\r\n                    <p className=\"Released\"><b>Released: </b>{props.moviedetails.Released}</p>\r\n                    <p className=\"Cast\"><b>Casts: </b>{props.moviedetails.Actors}</p>\r\n                    <p className=\"Director\"><b>Directed by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Writer\"><b>Written by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Language\"><b>In: </b>{props.moviedetails.Language}</p>\r\n                    <p className=\"BoxOffice\"><b>Earnings: </b>{props.moviedetails.BoxOffice}</p>\r\n                    <div className=\"Ratings\"><b>Ratings: </b>\r\n                        {\r\n                            props.moviedetails.Ratings.map((item, i) =>\r\n                                <li key={i.toString()}>{item.Source}: <span>{item.Value}</span></li>\r\n                            )\r\n                        }</div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <p className=\"Error\">Movie not found</p>\r\n        )\r\n    }\r\n\r\n}\r\nexport default MovieComponent;"]},"metadata":{},"sourceType":"module"}