{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\TTCodebase\\\\React\\\\MovieApp\\\\fetch-movies\\\\src\\\\MovieComponent.jsx\";\n\nimport React, { Component, useState } from \"react\";\nimport './MovieComponent.css';\nimport Axios from 'axios';\n\nvar MovieComponent = function MovieComponent(props) {\n  //const [title, setTitle] = useState();\n  console.log('passed json', props.moviedetails);\n\n  if (props.moviedetails != null && props.moviedetails.Response != 'False') {\n    //Save data to database\n    //use npm install axios to make http request to send data from client to server\n    Axios.post('http://localhost:3001/insert', {\n      title: props.moviedetails.Title,\n      genre: props.moviedetails.Genre,\n      released: props.moviedetails.Released,\n      ratings: props.moviedetails.Ratings[0].Value,\n      poster: props.moviedetails.Poster\n    });\n    console.log(\"Made DB calls, Saved Items.\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"movieComponentId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cloumn1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: props.moviedetails.Poster,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cloumn2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"Title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, props.moviedetails.Title), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"About the moview\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"About\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, props.moviedetails.Plot), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Genre\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 42\n      }\n    }, \"Genre: \"), props.moviedetails.Genre), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Released\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 45\n      }\n    }, \"Released: \"), props.moviedetails.Released), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Cast\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }\n    }, \"Casts: \"), props.moviedetails.Actors), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Director\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }\n    }, \"Directed by: \"), props.moviedetails.Director), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Writer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 43\n      }\n    }, \"Written by: \"), props.moviedetails.Director), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Language\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 45\n      }\n    }, \"In: \"), props.moviedetails.Language), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"BoxOffice\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 46\n      }\n    }, \"Earnings: \"), props.moviedetails.BoxOffice), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Ratings\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 46\n      }\n    }, \"Ratings: \"), props.moviedetails.Ratings.map(function (item, i) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: i.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, item.Source, \": \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 71\n        }\n      }, item.Value));\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: \"Error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Movie not found\");\n  }\n};\n\nexport default MovieComponent;","map":{"version":3,"sources":["C:/TTCodebase/React/MovieApp/fetch-movies/src/MovieComponent.jsx"],"names":["React","Component","useState","Axios","MovieComponent","props","console","log","moviedetails","Response","post","title","Title","genre","Genre","released","Released","ratings","Ratings","Value","poster","Poster","Plot","Actors","Director","Language","BoxOffice","map","item","i","toString","Source"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport './MovieComponent.css'\r\nimport Axios from 'axios'\r\n\r\nconst MovieComponent = (props) => {\r\n\r\n    //const [title, setTitle] = useState();\r\n\r\n\r\n    console.log('passed json', props.moviedetails)\r\n    if (props.moviedetails != null && props.moviedetails.Response != 'False') {\r\n        //Save data to database\r\n        //use npm install axios to make http request to send data from client to server\r\n        Axios.post('http://localhost:3001/insert', {\r\n            title: props.moviedetails.Title,\r\n            genre: props.moviedetails.Genre,\r\n            released: props.moviedetails.Released,\r\n            ratings: props.moviedetails.Ratings[0].Value,\r\n            poster: props.moviedetails.Poster\r\n        });\r\n        console.log(\"Made DB calls, Saved Items.\");\r\n\r\n        return (\r\n            <div id='movieComponentId'>\r\n                <div className=\"cloumn1\">\r\n                    <img className=\"image\" src={props.moviedetails.Poster} />\r\n                </div>\r\n                <div className=\"cloumn2\">\r\n                    <h2 className=\"Title\">{props.moviedetails.Title}</h2>\r\n                    <h4>About the moview</h4>\r\n                    <p className=\"About\">{props.moviedetails.Plot}</p>\r\n                    <p className=\"Genre\"><b>Genre: </b>{props.moviedetails.Genre}</p>\r\n                    <p className=\"Released\"><b>Released: </b>{props.moviedetails.Released}</p>\r\n                    <p className=\"Cast\"><b>Casts: </b>{props.moviedetails.Actors}</p>\r\n                    <p className=\"Director\"><b>Directed by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Writer\"><b>Written by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Language\"><b>In: </b>{props.moviedetails.Language}</p>\r\n                    <p className=\"BoxOffice\"><b>Earnings: </b>{props.moviedetails.BoxOffice}</p>\r\n                    <div className=\"Ratings\"><b>Ratings: </b>\r\n                        {\r\n                            props.moviedetails.Ratings.map((item, i) =>\r\n                                <li key={i.toString()}>{item.Source}: <span>{item.Value}</span></li>\r\n                            )\r\n                        }</div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n    } else {\r\n        return (\r\n            <p className=\"Error\">Movie not found</p>\r\n        )\r\n    }\r\n\r\n}\r\nexport default MovieComponent;"]},"metadata":{},"sourceType":"module"}