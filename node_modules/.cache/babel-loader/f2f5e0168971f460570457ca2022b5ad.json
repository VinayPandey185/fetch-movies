{"ast":null,"code":"var _jsxFileName = \"C:\\\\TTCodebase\\\\React\\\\SeeMovies\\\\fetch-movies\\\\src\\\\MovieComponent.jsx\";\nimport React, { Component } from \"react\";\nimport './MovieComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieComponent = props => {\n  console.log('passed json', props.moviedetails);\n\n  if (props.moviedetails != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"movieComponentId\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cloumn1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: props.moviedetails.Poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cloumn2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"Title\",\n          children: props.moviedetails.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"About the moview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"About\",\n          children: props.moviedetails.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Genre\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Genre: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 42\n          }, this), props.moviedetails.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Cast\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Casts: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 41\n          }, this), props.moviedetails.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Director\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Directed by: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 45\n          }, this), props.moviedetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Writer\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Written by: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 43\n          }, this), props.moviedetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Language\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"In: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 45\n          }, this), props.moviedetails.Language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"BoxOffice\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Earnings: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 46\n          }, this), props.moviedetails.BoxOffice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Ratings\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Ratings: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 44\n          }, this), props.moviedetails.Ratings.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.Source, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.Value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 53\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: \"Somethinng went wrong, see console !!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = MovieComponent;\nexport default MovieComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieComponent\");","map":{"version":3,"sources":["C:/TTCodebase/React/SeeMovies/fetch-movies/src/MovieComponent.jsx"],"names":["React","Component","MovieComponent","props","console","log","moviedetails","Poster","Title","Plot","Genre","Actors","Director","Language","BoxOffice","Ratings","map","item","i","Source","Value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport './MovieComponent.css'\r\n\r\nconst MovieComponent = (props) => {\r\n    console.log('passed json', props.moviedetails)\r\n    if (props.moviedetails != null) {\r\n        return (\r\n            <div id='movieComponentId'>\r\n                <div className=\"cloumn1\">\r\n                    <img className=\"image\" src={props.moviedetails.Poster} />\r\n                </div>\r\n                <div className=\"cloumn2\">\r\n                    <h2 className=\"Title\">{props.moviedetails.Title}</h2>\r\n                    <h4>About the moview</h4>\r\n                    <p className=\"About\">{props.moviedetails.Plot}</p>\r\n                    <p className=\"Genre\"><b>Genre: </b>{props.moviedetails.Genre}</p>\r\n                    <p className=\"Cast\"><b>Casts: </b>{props.moviedetails.Actors}</p>\r\n                    <p className=\"Director\"><b>Directed by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Writer\"><b>Written by: </b>{props.moviedetails.Director}</p>\r\n                    <p className=\"Language\"><b>In: </b>{props.moviedetails.Language}</p>\r\n                    <p className=\"BoxOffice\"><b>Earnings: </b>{props.moviedetails.BoxOffice}</p>\r\n                    <p className=\"Ratings\"><b>Ratings: </b>\r\n                        {\r\n                            props.moviedetails.Ratings.map((item, i) =>\r\n                                <div>{item.Source}: <span>{item.Value}</span></div>\r\n                            )\r\n                        }</p>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        <p>Somethinng went wrong, see console !!</p>\r\n\r\n    }\r\n}\r\nexport default MovieComponent;"]},"metadata":{},"sourceType":"module"}